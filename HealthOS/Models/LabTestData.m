//
//  LabTestData.m
//  HealthOS
//
//  This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ) on 02/18/2017
//
#import "LabTestData.h"

@implementation LabTestData

/**
* TODO: Write general description for this method
*/
@synthesize orderingInformation;

/**
* TODO: Write general description for this method
*/
@synthesize alternateNames;

/**
* TODO: Write general description for this method
*/
@synthesize laboratory;

/**
* TODO: Write general description for this method
*/
@synthesize testCode;

/**
* TODO: Write general description for this method
*/
@synthesize specimenTypes;

/**
* TODO: Write general description for this method
*/
@synthesize containerTypes;

/**
* TODO: Write general description for this method
*/
@synthesize minimumAdultVolume;

/**
* TODO: Write general description for this method
*/
@synthesize frequency;

/**
* TODO: Write general description for this method
*/
@synthesize externalLaboratory;



/**
* Key mappings for the json serialization and deserialization
*/
+(NSDictionary*) keyMap
{
    NSMutableDictionary* map = [[NSMutableDictionary alloc] init];
    [map addEntriesFromDictionary: @{
        @"Ordering information": @"orderingInformation",
        @"Alternate names": @"alternateNames",
        @"Laboratory": @"laboratory",
        @"Test Code": @"testCode",
        @"Specimen types": @"specimenTypes",
        @"Container types": @"containerTypes",
        @"Minimum Adult Volume": @"minimumAdultVolume",
        @"Frequency": @"frequency",
        @"External Laboratory": @"externalLaboratory"  
    }];

    return map;
}

/**
* Key mapper for json serialization and deserialization
*/
+(JSONKeyMapper*) keyMapper
{ 
  return [[JSONKeyMapper alloc] initWithDictionary: [self keyMap]];
}

/**
* Helps avoiding deserialization errors when one or more properties are missing
* @returns	True, indicating that all properties are optional for deserialization
*/
+(BOOL)propertyIsOptional:(NSString*) propertyName
{
    return YES;
}

@end